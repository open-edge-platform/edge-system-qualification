name: Docs Deploy

on:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  # Setup runner configuration
  setup:
    name: Setup Runner Configuration
    runs-on: ubuntu-latest
    
    env:
      EXTERNAL_REPO: 'open-edge-platform/edge-system-qualification'
    
    outputs:
      runner_labels: ${{ steps.configure.outputs.runner_labels }}
    
    steps:
      - name: Configure runner settings
        id: configure
        run: |
          if [[ "${{ github.repository }}" == "${{ env.EXTERNAL_REPO }}" ]]; then
            RUNNER_LABELS='["ubuntu-latest"]'
            echo "Repository type: External"
            echo "Repository: ${{ github.repository }}"
          else
            RUNNER_LABELS='["self-hosted", "vm"]'
            echo "Repository type: Internal"
            echo "Repository: ${{ github.repository }}"
          fi
          
          echo "runner_labels=${RUNNER_LABELS}" >> $GITHUB_OUTPUT
          echo "Runner configuration: ${RUNNER_LABELS}"
      
      - name: Generate configuration summary
        run: |
          echo "## ⚙️ Runner Configuration" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Setting | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Repository | \`${{ github.repository }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| External Repo | \`${{ env.EXTERNAL_REPO }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Runner Labels | \`${{ steps.configure.outputs.runner_labels }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

  # Build documentation
  build:
    name: Build Documentation
    needs: setup
    runs-on: ${{ fromJSON(needs.setup.outputs.runner_labels) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        run: |
          if ! command -v uv &> /dev/null; then
            echo "uv not found, installing..."
            curl -LsSf https://astral.sh/uv/install.sh | sh
            export PATH="$HOME/.local/bin:$PATH"
            echo "$HOME/.local/bin" >> $GITHUB_PATH
          else
            echo "uv is already installed"
          fi

      - name: Setup Python virtual environment with uv
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv venv .venv_docs

      - name: Install dependencies with uv
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          source .venv_docs/bin/activate
          uv pip install -r requirements-docs.txt

      - name: Build documentation
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          source .venv_docs/bin/activate
          mkdocs build --clean

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: site/
          
  # Deployment using GitHub Pages action
  deploy-pages:
    name: Deploy to GitHub Pages
    needs: [setup, build]
    runs-on: ${{ fromJSON(needs.setup.outputs.runner_labels) }}
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: documentation-site
          path: ./site

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v4
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Summary
        if: always()
        run: |
          echo "## 🔰 Documentation Deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Property | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Runner Name | \`${{ runner.name }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Runner Environment | ${{ runner.environment }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Repository | [\`${{ github.repository }}\`](https://github.com/${{ github.repository }}) |" >> $GITHUB_STEP_SUMMARY
          echo "| Event | ${{ github.event_name }} |" >> $GITHUB_STEP_SUMMARY
          
          # Build status
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "| Build | ✅ Success |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Build | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Deploy status
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "| Deploy | ✅ Success |" >> $GITHUB_STEP_SUMMARY
            echo "| Site URL | ${{ steps.deployment.outputs.page_url }} |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Deploy | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
            echo "| Site URL | N/A |" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "*Completed at $(date -u '+%Y-%m-%d %H:%M:%S UTC')*" >> $GITHUB_STEP_SUMMARY
